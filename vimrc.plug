call plug#begin('~/.vim/plugged')

" Fugitive Vim Github Wrapper
Plug 'tpope/vim-fugitive'

" Solarized color scheme
Plug 'lifepillar/vim-solarized8'

" Emmet-vim
Plug 'mattn/emmet-vim'

" Nerd tree- flie explorer for searching files in the file system
Plug 'preservim/nerdtree'

" Fuzzy finder- enables easy file search
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }

" Ripgrep- searches for directories in a regex pattern
Plug 'BurntSushi/ripgrep'

" CSS color name highlighter
Plug 'ap/vim-css-color'

" Easy align
Plug 'junegunn/vim-easy-align'

" Code autocompletion engine
"Plug 'ycm-core/YouCompleteMe'

" wombat color-scheme
Plug 'michalbachowski/vim-wombat256mod'

" Live server for web development
Plug 'wolandark/vim-live-server'

" Vim close tags
Plug 'alvan/vim-closetag'

" Tag along
Plug 'AndrewRadev/tagalong.vim'

call plug#end()


" " Emmet
let g:user_emmet_leader_key=','


" " Vim close tags
" filenames like *.xml, *.html, *.xhtml, ...
" These are the file extensions where this plugin is enabled.
"
let g:closetag_filenames = '*.html,*.xhtml,*.phtml'

" filenames like *.xml, *.xhtml, ...
" This will make the list of non-closing tags self-closing in the specified files.
"
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'

" filetypes like xml, html, xhtml, ...
" These are the file types where this plugin is enabled.
"
let g:closetag_filetypes = 'html,xhtml,phtml'

" filetypes like xml, xhtml, ...
" This will make the list of non-closing tags self-closing in the specified files.
"
let g:closetag_xhtml_filetypes = 'xhtml,jsx'

" integer value [0|1]
" This will make the list of non-closing tags case-sensitive (e.g. `<Link>` will be closed while `<link>` won't.)
"
let g:closetag_emptyTags_caseSensitive = 1

" dict
" Disables auto-close if not in a "valid" region (based on filetype)
"
let g:closetag_regions = {
    \ 'typescript.tsx': 'jsxRegion,tsxRegion',
    \ 'javascript.jsx': 'jsxRegion',
    \ 'typescriptreact': 'jsxRegion,tsxRegion',
    \ 'javascriptreact': 'jsxRegion',
    \ }

" Shortcut for closing tags, default is '>'
"
let g:closetag_shortcut = '>'

" Add > at current position without closing the current tag, default is ''
"
let g:closetag_close_shortcut = '<leader>>'


" " Easy align
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)


" " Live-Server keybindings
nmap <F2> :StartLiveServer <CR>
nmap <F3> :KillLiveServer <CR>


" "FZF Config
" If using NeoVim, sets fzf to use a popup window in the center of the main Vim window.
" Otherwise, sets fzf to use a frame in the bottom quarter of the main Vim window.
if has('nvim')
    let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6, 'relative': v:true } }
else
    let g:fzf_layout = { 'down': '35%' }
endif

" Aligns the fzf color scheme with your Vim color scheme.
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }
